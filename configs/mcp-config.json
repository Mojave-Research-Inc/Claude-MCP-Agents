{
  "mcpServers": {
    "brain-comprehensive": {
      "command": "python3",
      "args": ["$HOME/.claude/mcp-servers/brain-mcp-comprehensive.py"],
      "env": {
        "POSTGRES_URL": "postgresql://postgres:postgres@localhost:5432/brain_mcp",
        "VECTOR_DIM": "1024",
        "EMBED_MODEL": "text-embedding-3-large",
        "MCP_SCAN_ROOTS": "$HOME/.claude/mcp-servers:/opt/mcp:/work/.mcp",
        "LOG_LEVEL": "INFO",
        "PYTHONPATH": "$HOME/.claude:$HOME/.claude/scripts",
        "COMMENT": "Primary orchestrator - RAG + Vector + Auto-MCP Discovery. Lazy-calls specialized agents."
      }
    },
    "aegispp": {
      "command": "node",
      "args": ["$HOME/.claude/mcp-servers/aegispp-mcp/dist/server.js"],
      "env": {
        "LOG_LEVEL": "INFO",
        "NODE_PATH": "$HOME/.claude/mcp-servers/aegispp-mcp/node_modules",
        "AEGIS_DB": "$HOME/.claude/mcp-servers/aegispp-mcp/aegis.db",
        "COMMENT": "Advanced orchestrator - HTN planning, contextual bandit routing, multi-agent debate"
      }
    },
    "checklist-sentinel": {
      "command": "node",
      "args": ["$HOME/.claude/mcp-servers/checklist-sentinel-mcp/dist/server.js"],
      "env": {
        "CHECKLIST_DB": "$HOME/.claude/checklist_sentinel.db",
        "LOG_LEVEL": "INFO",
        "COMMENT": "Work tracking and progress management with lease-based concurrency"
      }
    },
    "knowledge-manager": {
      "command": "python3",
      "args": ["$HOME/.claude/mcp-servers/knowledge-manager-mcp.py"],
      "env": {
        "LOG_LEVEL": "INFO",
        "PYTHONPATH": "$HOME/.claude:$HOME/.claude/scripts",
        "COMMENT": "Cross-session knowledge persistence and retrieval"
      }
    },
    "context-intelligence": {
      "command": "python3",
      "args": ["$HOME/.claude/mcp-servers/context-intelligence-server-fixed.py"],
      "env": {
        "LOG_LEVEL": "INFO",
        "PYTHONPATH": "$HOME/.claude:$HOME/.claude/scripts",
        "COMMENT": "AI-powered context synthesis and planning coordinator"
      }
    },
    "resource-monitor": {
      "command": "python3",
      "args": ["$HOME/.claude/mcp-servers/resource-monitoring-server-fixed.py"],
      "env": {
        "LOG_LEVEL": "INFO",
        "PYTHONPATH": "$HOME/.claude:$HOME/.claude/scripts",
        "COMMENT": "System resource monitoring and optimization guardian"
      }
    },
    "sequential-thinking": {
      "command": "npx",
      "args": ["-y", "@modelcontextprotocol/server-sequential-thinking"],
      "env": {
        "LOG_LEVEL": "INFO"
      }
    },
    "open-websearch": {
      "command": "npx",
      "args": ["-y", "open-websearch@latest"],
      "env": {
        "MODE": "stdio",
        "DEFAULT_SEARCH_ENGINE": "duckduckgo",
        "ALLOWED_SEARCH_ENGINES": "duckduckgo,bing,brave",
        "LOG_LEVEL": "INFO"
      }
    },
    "context7": {
      "command": "npx",
      "args": ["-y", "@upstash/context7-mcp"],
      "env": {
        "LOG_LEVEL": "INFO"
      }
    },
    "deepwiki": {
      "command": "npx",
      "args": ["-y", "mcp-deepwiki@latest"],
      "env": {
        "LOG_LEVEL": "INFO"
      }
    },
    "filesystem": {
      "command": "mcp-server-filesystem",
      "args": ["$HOME"],
      "env": {
        "LOG_LEVEL": "INFO"
      }
    },
    "memory": {
      "command": "mcp-server-memory",
      "args": [],
      "env": {
        "LOG_LEVEL": "INFO"
      }
    }
  }
}